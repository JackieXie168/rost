#
# Copyright (C) 2009-2014 Olof Hagsand and Benny Holmgren
#
# This file is part of ROST.
#
# ROST is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
#  ROST is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along wth ROST; see the file COPYING.  If not, see
# <http://www.gnu.org/licenses/>.
# 
@SET($ROST_PLUGIN_DIR, "${CLICON_CLISPEC_DIR}")
@IF($system.hostname->hostname ? "hostname $system.hostname->hostname\n!\n")
###@IF($system.boot->dummie ? "boot system flash $title\n!\n")
@EACH($system.login.user[], $user)
@IF($user.uid ? "username $user->user uid $user->uid\n")
@IF($user.authentcation.password->password ? "username $user->user password $user.authentication.password->password\n")
@IF($user.class->class ? "username $user->user class $user.class->class\n")
@END
@IF($ipv4.domain->domain ? "ip domain name $ipv4.domain->domain\n")
@EACH($ipv4.name-server[], $ns, "ip name-server \$ns->address\n")
!\n
@IF($ipv4.forwarding->status ? "ip routing" : "no ip routing")\n
!\n
@EACH($interface[], $if)
@EACH($if.unit[], $iface, "@INCLUDE(\"${ROST_PLUGIN_DIR}/ios-interface.d2t\")")
@END
@IF($router.router-id->routerid ? "router-id $router-id->routerid\n")
!\n
@IF($router.rip->instance != nil)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-router-rip.d2t")
@END
@IF($router.ospf->instance != nil)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-router-ospf.d2t")
@END
@IF($router.bgp->as)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-router-bgp.d2t")
@END
@EACH($ipv4.route.static[], $rt)
ip route $rt->prefix $rt->nexthop@IF($rt->distance ? " $rt->distance")@IF($rt->name ? " name $rt->name")\n
@END
@EACH($ipv4.route.static.null[], $rt)
ip route $rt->prefix null0@IF($rt->distance ? " $rt->distance")@IF($rt->name ? " name $rt->name")\n
@END
!\n
@EACH($ipv4.arp[], $arp, "ip arp \$arp->address \$arp->mac\n")
!\n
@EACH($ipv4.access-list.standard[], $acl)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-acl-standard.d2t")
@END
@EACH($ipv4.access-list.extended[], $acl)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-acl-extended.d2t")
@END
@EACH($ipv4.access-list.standard.named[], $acl)
@INCLUDE("${ROST_PLUGIN_DIR}/ios-acl-standard-named.d2t")
@END
!\n
@EACH($ipv4.prefix-list[], $pfx)
@IF($pfx->description ? "ip prefix-list \$pfx->name description \$pfx->description\n")
@EACH($pfx.line[], $pfxl)
ip prefix-list $pfx->name@IF($pfxl->seq ? " seq $pfxl->seq") $pfxl->action 
@IF($pfxl->prefix == (ipv4prefix)0.0.0.0/0 ? "any" : "$pfxl->prefix")
@IF($pfxl->ge ? " ge $pfxl->ge")@IF($pfxl->le ? " le $pfxl->le")
\n
@END
!\n
@END
@EACH($ipv4.as-path.access-list[], $asp, "ip as-path access-list \$asp->name \$asp->action \$asp->regexp\n")
!\n
@INCLUDE("${ROST_PLUGIN_DIR}/ios-route-map.d2t")
!\n
@IF($logging.buffered->rows ? "logging buffered $logging.buffered->rows $logging.buffered->level\n")
@IF($logging.trap->level ? "logging trap $logging.trap->level\n")
@EACH($logging.host[], $lh, "logging host \$lh->host transport \$lh->protocol port \$lh->port\n")
!\n
@EACH($snmp.community.ro[], $ro, "snmp-server community \$ro->community ro'\n")
@EACH($snmp.community.rw[], $rw, "snmp-server community \$rw->community rw'\n")
@IF($snmp.contact->contact ? "snmp-server contact $snmp.contact->contact\n")
@IF($snmp.location->location ? "snmp-server location $snmp.location->location\n")
!\n
@IF($ntp.logging->dummy ? "ntp logging\n")
@EACH($ntp.server[], $serv, "ntp server \$serv->address\n")
#@END
!\n
